name: Tasks

on:
  push:
  pull_request:

jobs:
  lint-php:
    name: "linting:    php: ${{ matrix.php }} TYPO3: ${{ matrix.typo3 }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [ '8.3', '8.4' ]
        typo3: [ '13' ]
    steps:
      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: ${{ runner.os }}-${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.php }}-composer-
      - run: composer require typo3/minimal="^${{ matrix.typo3 }}" --dev --ignore-platform-req=php+
      - run: ./vendor/bin/grumphp run --ansi

  playwright:
    name: "playwright: php: ${{ matrix.php }} TYPO3: ${{ matrix.typo3 }} Storybook: ${{ matrix.storybook }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [ '8.3', '8.4' ]
        typo3: [ '13' ]
        # not implemented yet:
        storybook: [ '9.0' ]
    env:
      PHP_IMAGE_VERSION: ${{ matrix.php }}
      TYPO3_VERSION: ${{ matrix.typo3 }}
      # not implemented yet:
      STORYBOOK_VERSION: ${{ matrix.storybook }}
    defaults:
      run:
        working-directory: .Build
    steps:
      - uses: actions/checkout@v4
      - run: chmod -R 0777 ..
      - run: bash test.sh playwright
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-php-${{ matrix.php }}-typo3-${{ matrix.typo3 }}-storybook-${{ matrix.storybook }}
          path: Documentation/dummy-project/playwright-report

  tests-documentation:
    name: documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Test if the documentation will render without warnings
        run: |
          mkdir -p Documentation-GENERATED-temp \
          && docker run --rm --pull always -v $(pwd):/project \
             ghcr.io/typo3-documentation/render-guides:latest --config=Documentation --no-progress --minimal-test

  npm-publish:
    name: npm publish
    runs-on: ubuntu-latest
    needs: [ lint-php, playwright ]
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: ./the-npm-package/
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: "the-npm-package"
          registry-url: 'https://registry.npmjs.org'
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - run: npm ci
      - run: npm --no-git-tag-version version ${{ steps.get_version.outputs.VERSION }}
      - run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}


  ter-release:
    name: TER release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [ lint-php, playwright ]
    env:
      TYPO3_EXTENSION_KEY: 'storybook'
      REPOSITORY_URL: 'https://github.com/andersundsehr/storybook'
      TYPO3_API_TOKEN: ${{ secrets.TYPO3_API_TOKEN }}

    steps:
      - uses: actions/checkout@v4
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: intl, mbstring, xml, soap, zip, curl

      - name: Install typo3/tailor
        run: composer global require typo3/tailor --prefer-dist --no-progress

      - name: Upload EXT:storybook to TER
        run: |
          sed -i 's/InstalledVersions::getPrettyVersion('\''andersundsehr\/storybook'\'')/'\''${{ steps.get_version.outputs.VERSION }}'\''/g' ext_emconf.php \
          && git config --global user.email "no@one" \
          && git config --global user.name "No One" \
          && git add ext_emconf.php \
          && git commit -m 'x' -n \
          && git archive -o archive.zip HEAD --prefix=storybook-${{ steps.get_version.outputs.VERSION }}/ \
          && git reset --hard HEAD~ \
          && curl -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/andersundsehr/storybook/releases/tags/${{ steps.get_version.outputs.VERSION }} > release.json \
          && php ~/.composer/vendor/bin/tailor ter:publish ${{ steps.get_version.outputs.VERSION }} --artefact=archive.zip \
          --comment="$(cat release.json | jq -r '.name')

          $(cat release.json | jq -r '.body')

          $(cat release.json | jq -r '.html_url')"
